/*
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.22.0+dev-892-g9de5e39e2
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// Cron : Cron represents a Cron task
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Cron {
    #[serde(rename = "exec_times", skip_serializing_if = "Option::is_none")]
    pub exec_times: Option<i64>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "next", skip_serializing_if = "Option::is_none")]
    pub next: Option<String>,
    #[serde(rename = "prev", skip_serializing_if = "Option::is_none")]
    pub prev: Option<String>,
    #[serde(rename = "schedule", skip_serializing_if = "Option::is_none")]
    pub schedule: Option<String>,
}

impl Cron {
    /// Cron represents a Cron task
    pub fn new() -> Cron {
        Cron {
            exec_times: None,
            name: None,
            next: None,
            prev: None,
            schedule: None,
        }
    }
}
