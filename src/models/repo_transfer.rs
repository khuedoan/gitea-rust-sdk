/*
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.22.0+dev-892-g9de5e39e2
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// RepoTransfer : RepoTransfer represents a pending repo transfer
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RepoTransfer {
    #[serde(rename = "doer", skip_serializing_if = "Option::is_none")]
    pub doer: Option<Box<models::User>>,
    #[serde(rename = "recipient", skip_serializing_if = "Option::is_none")]
    pub recipient: Option<Box<models::User>>,
    #[serde(rename = "teams", skip_serializing_if = "Option::is_none")]
    pub teams: Option<Vec<models::Team>>,
}

impl RepoTransfer {
    /// RepoTransfer represents a pending repo transfer
    pub fn new() -> RepoTransfer {
        RepoTransfer {
            doer: None,
            recipient: None,
            teams: None,
        }
    }
}
