/*
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.22.0+dev-892-g9de5e39e2
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// Badge : Badge represents a user badge
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Badge {
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i64>,
    #[serde(rename = "image_url", skip_serializing_if = "Option::is_none")]
    pub image_url: Option<String>,
    #[serde(rename = "slug", skip_serializing_if = "Option::is_none")]
    pub slug: Option<String>,
}

impl Badge {
    /// Badge represents a user badge
    pub fn new() -> Badge {
        Badge {
            description: None,
            id: None,
            image_url: None,
            slug: None,
        }
    }
}
