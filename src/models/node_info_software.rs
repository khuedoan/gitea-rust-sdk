/*
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.22.0+dev-892-g9de5e39e2
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// NodeInfoSoftware : NodeInfoSoftware contains Metadata about server software in use
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NodeInfoSoftware {
    #[serde(rename = "homepage", skip_serializing_if = "Option::is_none")]
    pub homepage: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "repository", skip_serializing_if = "Option::is_none")]
    pub repository: Option<String>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
}

impl NodeInfoSoftware {
    /// NodeInfoSoftware contains Metadata about server software in use
    pub fn new() -> NodeInfoSoftware {
        NodeInfoSoftware {
            homepage: None,
            name: None,
            repository: None,
            version: None,
        }
    }
}
