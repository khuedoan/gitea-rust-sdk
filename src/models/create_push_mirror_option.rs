/*
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.22.0+dev-892-g9de5e39e2
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreatePushMirrorOption {
    #[serde(rename = "interval", skip_serializing_if = "Option::is_none")]
    pub interval: Option<String>,
    #[serde(rename = "remote_address", skip_serializing_if = "Option::is_none")]
    pub remote_address: Option<String>,
    #[serde(rename = "remote_password", skip_serializing_if = "Option::is_none")]
    pub remote_password: Option<String>,
    #[serde(rename = "remote_username", skip_serializing_if = "Option::is_none")]
    pub remote_username: Option<String>,
    #[serde(rename = "sync_on_commit", skip_serializing_if = "Option::is_none")]
    pub sync_on_commit: Option<bool>,
}

impl CreatePushMirrorOption {
    pub fn new() -> CreatePushMirrorOption {
        CreatePushMirrorOption {
            interval: None,
            remote_address: None,
            remote_password: None,
            remote_username: None,
            sync_on_commit: None,
        }
    }
}
