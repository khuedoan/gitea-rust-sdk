/*
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.22.0+dev-892-g9de5e39e2
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// PullRequestMeta : PullRequestMeta PR info if an issue is a PR
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PullRequestMeta {
    #[serde(rename = "draft", skip_serializing_if = "Option::is_none")]
    pub draft: Option<bool>,
    #[serde(rename = "merged", skip_serializing_if = "Option::is_none")]
    pub merged: Option<bool>,
    #[serde(rename = "merged_at", skip_serializing_if = "Option::is_none")]
    pub merged_at: Option<String>,
}

impl PullRequestMeta {
    /// PullRequestMeta PR info if an issue is a PR
    pub fn new() -> PullRequestMeta {
        PullRequestMeta {
            draft: None,
            merged: None,
            merged_at: None,
        }
    }
}
