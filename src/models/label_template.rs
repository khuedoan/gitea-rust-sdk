/*
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.22.0+dev-892-g9de5e39e2
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// LabelTemplate : LabelTemplate info of a Label template
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LabelTemplate {
    #[serde(rename = "color", skip_serializing_if = "Option::is_none")]
    pub color: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "exclusive", skip_serializing_if = "Option::is_none")]
    pub exclusive: Option<bool>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

impl LabelTemplate {
    /// LabelTemplate info of a Label template
    pub fn new() -> LabelTemplate {
        LabelTemplate {
            color: None,
            description: None,
            exclusive: None,
            name: None,
        }
    }
}
