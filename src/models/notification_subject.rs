/*
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.22.0+dev-892-g9de5e39e2
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// NotificationSubject : NotificationSubject contains the notification subject (Issue/Pull/Commit)
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NotificationSubject {
    #[serde(rename = "html_url", skip_serializing_if = "Option::is_none")]
    pub html_url: Option<String>,
    #[serde(
        rename = "latest_comment_html_url",
        skip_serializing_if = "Option::is_none"
    )]
    pub latest_comment_html_url: Option<String>,
    #[serde(rename = "latest_comment_url", skip_serializing_if = "Option::is_none")]
    pub latest_comment_url: Option<String>,
    /// StateType issue state type
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<String>,
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    /// NotifySubjectType represent type of notification subject
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
}

impl NotificationSubject {
    /// NotificationSubject contains the notification subject (Issue/Pull/Commit)
    pub fn new() -> NotificationSubject {
        NotificationSubject {
            html_url: None,
            latest_comment_html_url: None,
            latest_comment_url: None,
            state: None,
            title: None,
            r#type: None,
            url: None,
        }
    }
}
