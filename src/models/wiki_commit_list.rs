/*
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.22.0+dev-892-g9de5e39e2
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// WikiCommitList : WikiCommitList commit/revision list
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WikiCommitList {
    #[serde(rename = "commits", skip_serializing_if = "Option::is_none")]
    pub commits: Option<Vec<models::WikiCommit>>,
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<i64>,
}

impl WikiCommitList {
    /// WikiCommitList commit/revision list
    pub fn new() -> WikiCommitList {
        WikiCommitList {
            commits: None,
            count: None,
        }
    }
}
