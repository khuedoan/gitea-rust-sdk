/*
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.22.0+dev-892-g9de5e39e2
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// FilesResponse : FilesResponse contains information about multiple files from a repo
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FilesResponse {
    #[serde(rename = "commit", skip_serializing_if = "Option::is_none")]
    pub commit: Option<Box<models::FileCommitResponse>>,
    #[serde(rename = "files", skip_serializing_if = "Option::is_none")]
    pub files: Option<Vec<models::ContentsResponse>>,
    #[serde(rename = "verification", skip_serializing_if = "Option::is_none")]
    pub verification: Option<Box<models::PayloadCommitVerification>>,
}

impl FilesResponse {
    /// FilesResponse contains information about multiple files from a repo
    pub fn new() -> FilesResponse {
        FilesResponse {
            commit: None,
            files: None,
            verification: None,
        }
    }
}
